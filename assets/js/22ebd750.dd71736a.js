"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[585],{82063:e=>{e.exports=JSON.parse('{"functions":[{"name":"ok","desc":"Returns whether the Result has returned the values of the Future successfully or not.","params":[],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","source":{"line":41,"path":"lib/Result.lua"}},{"name":"error","desc":"If the Result is an Error, returns true.","params":[],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","source":{"line":57,"path":"lib/Result.lua"}}],"properties":[],"types":[],"name":"Result","desc":"The result of a Future, either equal to the return values or an error message.\\n\\n### Checking the Result\\n\\nYou can retrieve either the Returned Values (as a tuple), or the Error Message (as a string) by calling the result as a function.\\n```lua\\nlocal result = myFuture:output()\\n\\nif result:ok() then\\n\\tlocal returnedValues = result()\\n\\n\\t-- Do something\\nelseif result:error() then\\n\\twarn(result())\\nend\\n```","source":{"line":21,"path":"lib/Result.lua"}}')}}]);